name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - prod

env:
  MODEL_URL: ${{ secrets.MODEL_URL }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download ONNX model
        run: |
          python -c "import urllib.request; urllib.request.urlretrieve('${{ secrets.MODEL_URL }}', 'mnist12.onnx')"

      - name: Run tests
        run: |
          python -m unittest discover tests

  build_and_deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/onnx-model-api:${{ github.ref_name }} .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/onnx-model-api:${{ github.ref_name }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ github.ref_name == 'prod' && 'mnist-onnx-model-app-prod' || 'mnist-onnx-model-app-dev' }}
          slot-name: production
          images: ${{ secrets.DOCKERHUB_USERNAME }}/onnx-model-api:${{ github.ref_name }}
